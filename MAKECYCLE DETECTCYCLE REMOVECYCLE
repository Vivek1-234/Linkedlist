// program in linked list -->>>  1-->>  program to make cycle in linked list
// 2--->>  program to detectcycle in linked list 
// 3 --->>> program to remvoecycle and point to null in last in lunked list 



#include<iostream>
using namespace std;

class node{

    public:
    int  data ; 
    node*  next ; 

    node(int val){
        data = val ;
        next = NULL;

    }
};

void makingcycle(node* &head , int k ){
node* temp = head;
node* startnode;

int counter = 1 ;
while(temp->next!=NULL){

    if(counter==k){
    startnode = temp;
}
counter++;
temp = temp->next;

}
temp->next = startnode;

}

bool detectcycle(node* &head){
    node* slow = head;
    node* fast = head;

  while(fast!=NULL && fast->next!=NULL){
      slow = slow->next;
      fast = fast->next->next;

      if(fast==slow){
          return 1;
            }
     
  }
     
    return 0;


}

void removecycle(node* &head ){
    
    node* slow = head;
    node* fast = head;
    do{
        slow = slow->next;
        fast = fast->next->next;
    }while(slow!=fast);


    fast = head ;
   while(slow->next!=fast->next){
       fast = fast->next;
       slow= slow->next;
   }
   slow->next = NULL;

   
}


void insertattail(node* &head , int val){
    node* n = new node(val);
     if(head==NULL)
     {
         head = n ;
         return ; 
     }

     node* temp = head ; 

    while(temp->next!=NULL){
        temp = temp->next;
    }
     temp->next = n;

}
void display(node* head){
    node* temp = head ;

    cout<<"Your linked list is --->>>"<<endl;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp = temp->next;
    }
    cout<<endl;

}


int main(){
node* head = NULL;

insertattail(head , 1 );
insertattail(head , 2 );
insertattail(head , 3 );
insertattail(head , 4 );
insertattail(head , 5 );
insertattail(head , 6 );
insertattail(head , 7 );
insertattail(head , 8 );
insertattail(head , 9 );
insertattail(head , 10 );

// display(head);

 makingcycle(head , 4);
// display(head);

 cout<<detectcycle(head)<<endl;
  removecycle(head);
 cout<<detectcycle(head)<<endl;

 display(head);

 
// display(head);
return 0;
 }
