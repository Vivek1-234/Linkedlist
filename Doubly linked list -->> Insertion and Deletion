//  -->>>> doubly linked list ---->>>   1st -->>> program   to make doubly linked list
//  2nd---->>>  program to insertathead in doubly linked list 
//  3rd --->>>  program to deletion in doubly linked list
//  4th -->>>  program to deletion at head in doubly linked list 

#include<iostream>
using namespace std;
class node{

    public:

    int data ; 
    node* next ;
    node* prev ; 


       node(int val){
        data = val ; 
        next = NULL;
        prev = NULL;


    }
};

void insertathead(node* &head , int val ){
  node* n = new node(val);
  n->next = head ;
  if(head!=NULL){
  head->prev = n ;
  }             
  head = n ; 

}

void insertattail(node* &head , int val ){
    
     if(head==NULL){
        insertathead(head , val );
        return ; 
          }
 
  node* n = new node(val );
  node* temp = head ;

   

  while(temp->next!=NULL){
      temp = temp ->next ;
  }
 temp->next = n ;
 n->prev = temp ;


}
void display(node* head ){
 node* temp = head ; 
 while(temp!= NULL){
     cout<<temp->data<<" ";
     temp = temp->next;
 }
 cout<<endl;

}
void deletionathead(node* &head){
    if(head == NULL){
        return  ;
    }
    node* todelete = head ; 
   head =  head->next ; 
   head->prev = NULL;



    delete todelete;
}    

void deletion(node* &head  , int pos){

    if(pos==1){
        deletionathead(head);
        return ; 
    }
    node* temp = head ;
    int counter = 1 ; 
    while(temp!=NULL && counter<pos){
        temp = temp->next ;
        counter++;
        
          }
          temp->prev->next = temp->next;
          if(temp->next!=NULL){
          temp->next->prev = temp->prev;
          }

}


int main(){
node* head = NULL;
insertattail(head , 1 );
insertattail(head , 2 );
insertattail(head , 3 );
insertattail(head , 4 );
insertattail(head , 5 );
insertattail(head , 6 );
insertattail(head , 7 );
insertattail(head , 8 );
    
insertathead(head , 0);

display(head);

deletion(head  , 10);
display(head);

deletionathead(head);
display(head);
return 0;
 }
