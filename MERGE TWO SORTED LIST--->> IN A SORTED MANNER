//  program to ---->>>  our program is to sorted the two givn linked list to us --->> how we will solve this --->>>
//  example-==--->>>>
//   if we have 1st linked list-->>>>>  1 4 5 7 
// if w ehave 2 nd linked lsit --->>>>   2 3 6 

// then our answer will be what you know that what will be our answer --->>>>  1 2 3 4 5 6 7 --->>>  this will be our sorted linked lsit 

//  creation of a linked list and display  -->>  program --->> 1st program  -->>1
//  and  Insert at head in this linked list -->>> also in this program m    -->>2
// and also  searching of a node in linked list  in this program--->>>     -->>>3

//  program --->>> we will do this program by recusion also --->>>
// let's see this by recursion--->>>>>>>


#include<iostream>
using namespace std;

class node{

    public:
    int  data ; 
    node*  next ; 

    node(int val){
        data = val ;
        next = NULL;

    }
};

node* twosortedlinkedlist(node* &head1 , node* &head2 ){
     node* temp1 = head1;
     node* temp2 = head2;
     node* dummynode = new node(-1);
     node* p3 = dummynode;

     
    while(temp1!=NULL && temp2!=NULL){

        if(temp1->data<temp2->data){

            p3->next = temp1;
            temp1 = temp1->next;
        }
        else{
            
            p3->next = temp2;
            temp2 = temp2->next;
        }
       p3 = p3->next;

 
      }
    while(temp1!=NULL){
        p3->next = temp1 ;
        temp1 = temp1->next;
        p3 = p3->next;
    }
     while(temp2!=NULL){
        p3->next = temp2 ;
        temp2= temp2->next;
        p3 = p3->next;
    }

    return dummynode->next;
    
}

//  programm ----->>>  program to do this recursively -->>>   

node* recursivelysorted(node* &head1 , node* &head2){
    
    node* result ; 

    if(head1==NULL){
        return head2;
    }
     if(head2==NULL){
        return head1;
    }

    if(head1->data<head2->data){
        result = head1;
       result->next =  recursivelysorted(head1->next , head2);

    }
    else{
        result = head2;
       result->next =  recursivelysorted(head1 , head2->next);

    }
    return result ;

}

void insertattail(node* &head , int val){
    node* n = new node(val);
     if(head==NULL)
     {
         head = n ;
         return ; 
     }

     node* temp = head ; 

    while(temp->next!=NULL){
        temp = temp->next;
    }
     temp->next = n;

}
void display(node* head){
    node* temp = head ;

    cout<<"Your linked list is --->>>"<<endl;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp = temp->next;
    }
    cout<<endl;
}


int main(){
node* head1 = NULL;
node* head2 = NULL;

insertattail(head1 ,1 );
insertattail(head1 ,4 );
insertattail(head1, 5 );
insertattail(head1, 7 );
insertattail(head2, 2 );
insertattail(head2, 3 );
insertattail(head2, 6 );


display(head1);
display(head2);


// this--->>> this is without recussion
// node* result = twosortedlinkedlist(head1 , head2);
// display(result);




// this--->>> this is with the recussion
node* result = recursivelysorted(head1 , head2);
 display(result);

return 0;
 }
