//  program to append last k nodes of a linked list for ex ------>>>>    

//   1 --->>>>     1 2 3 4 5 6 ---->>>   4 5 6 1 2 3 --->>>  for k= 3 nodes this will be our answer in this ---->>>>


#include<iostream>
using namespace std;

class node{

    public:
    int  data ; 
    node*  next ; 

    node(int val){
        data = val ;
        next = NULL;

    }
};

int length(node* head){
    node* temp = head ; 
    int len = 0 ;
    while(temp!=NULL){
        temp = temp->next ; 
        len++;
    }
    return len;
   
}
node* apppend(node* &head , int k ){
    node* tail = head ;
    node* startnode ;
    node* newtail ;

   int l = length(head);
  
    k = k%l;
   int counter = 1 ;
    while(tail->next!=NULL){

        if(counter== l-k){
         
          newtail = tail ;
          
         
        }
         if(counter == l-k+1){
             startnode = tail ; 
         }
       
        tail = tail->next ; 
        counter++;
    } 
    
    newtail->next = NULL;
    tail->next = head ; 



    return startnode;




}

void insertattail(node* &head , int val){
    node* n = new node(val);
     if(head==NULL)
     {
         head = n ;
         return ; 
     }

     node* temp = head ; 

    while(temp->next!=NULL){
        temp = temp->next;
    }
     temp->next = n;

}
void display(node* head){
    node* temp = head ;

    cout<<"Your linked list is --->>>"<<endl;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp = temp->next;
    }
    cout<<endl;
}


int main(){
node* head = NULL;

insertattail(head , 1 );
insertattail(head , 2 );
insertattail(head , 3 );
insertattail(head , 4 );
insertattail(head , 5 );
insertattail(head , 6 );


display(head);

node* result = apppend(head , 3);
display(result);




return 0;
 }
